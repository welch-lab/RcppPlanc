--- a/hwloc/distances.c
+++ b/hwloc/distances.c
@@ -792,8 +792,8 @@ hwloc_internal_distances_refresh_one(hwl
 	obj = hwloc_get_pu_obj_by_os_index(topology, (unsigned) indexes[i]);
       else if (unique_type == HWLOC_OBJ_NUMANODE)
 	obj = hwloc_get_numanode_obj_by_os_index(topology, (unsigned) indexes[i]);
-      else
-	abort();
+      // else
+	// abort();
     } else {
       obj = hwloc_get_obj_by_type_and_gp_index(topology, different_types ? different_types[i] : unique_type, indexes[i]);
     }
--- a/hwloc/topology-linux.c
+++ b/hwloc/topology-linux.c
@@ -3075,9 +3075,9 @@ hwloc_linux_knl_parse_numa_distances(uns
       return -1;
     }
 
-  } else {
-    abort(); /* checked above */
-  }
+  } // else {
+    // abort(); /* checked above */
+  // }
 
   hwloc_debug("Summary of KNL distance matrix:\n");
   for(k=0; k<summary->nb_values; k++)
@@ -4889,7 +4889,7 @@ look_sysfscpukinds(struct hwloc_topology
     if (maxfreq && !basefreq)
       max_without_basefreq = 1;
     /* capacity */
-    snprintf(str, 43, "/sys/devices/system/cpu/cpu%d/cpu_capacity", i);
+    snprintf(str, 51, "/sys/devices/system/cpu/cpu%d/cpu_capacity", i);
     if (hwloc_read_path_as_uint(str, &capacity, data->root_fd) >= 0)
       by_pu[i].capacity = capacity;
     i++;
--- a/hwloc/memattrs.c
+++ b/hwloc/memattrs.c
@@ -1733,7 +1733,7 @@ hwloc__guess_memory_tiers_types(hwloc_to
     case HWLOC_MEMORY_TIER_DRAM:
     case HWLOC_MEMORY_TIER_HBM:
       /* not possible */
-      abort();
+      break;
     default:
       /* ignore HBM, NVM, ... */
       break;
